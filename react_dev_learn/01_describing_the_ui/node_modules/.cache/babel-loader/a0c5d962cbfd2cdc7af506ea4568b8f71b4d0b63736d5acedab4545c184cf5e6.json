{"ast":null,"code":"var _jsxFileName = \"/Users/leemccormick/Desktop/Playground/Intro-To-React/react_dev_learn/01_describing_the_ui/src/RederingLists.js\";\n/* NOTE : Rendering List Demo\n- How to move data out of components and into data structures like arrays and objects.\n- How to generate sets of similar components with JavaScript’s map().\n- How to create arrays of filtered items with JavaScript’s filter().\n- Why and how to set key on each component in a collection so React can keep track of each of them even if their position or data changes.\n*/\nimport { people } from './data.js';\nimport { getImageUrl } from './utils.js';\nimport { recipes } from './data.js';\nimport { Fragment } from 'react';\n\n// Rendering data from arrays\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar peopleNotSafeGotErrorWarningAboutKey = ['Creola Katherine Johnson: mathematician', 'Mario José Molina-Pasquel Henríquez: chemist', 'Mohammad Abdus Salam: physicist', 'Percy Lavon Julian: chemist', 'Subrahmanyan Chandrasekhar: astrophysicist'];\nexport function RenderingDataFromArrays() {\n  var _this = this;\n  var listItemsNotSafe = peopleNotSafeGotErrorWarningAboutKey.map(function (person) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: person\n    }, crypto.randomUUID(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 79\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data before putting in array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Creola Katherine Johnson: mathematician\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Mario Jos\\xE9 Molina-Pasquel Henr\\xEDquez: chemist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Mohammad Abdus Salam: physicist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Percy Lavon Julian: chemist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Subrahmanyan Chandrasekhar: astrophysicist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data from listItems that not safe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItemsNotSafe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// Filtering arrays of items\n// import { people } from './data.js';\n// import { getImageUrl } from './utils.js';\n/*\n1) Create a new array of just “chemist” people, chemists, by calling filter() on the people filtering by person.profession === 'chemist':\n2) Now map over chemists: listItems\n3) Lastly, return the listItems from your component:\n*/\n_c = RenderingDataFromArrays;\nexport function FilteringArraysOfItems() {\n  var _this2 = this;\n  var chemists = people.filter(function (person) {\n    return person.profession === 'chemist';\n  });\n  var listItems = chemists.map(function (person) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(person),\n        alt: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, _this2), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [person.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, _this2), ' ' + person.profession + ' ', \"known for \", person.accomplishment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, _this2)]\n    }, person.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this2);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n// Keeping list items in order with key\n_c2 = FilteringArraysOfItems;\nexport function KeepingListItemsInOrderWithKey() {\n  var _this3 = this;\n  var listItems = people.map(function (person) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(person),\n        alt: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, _this3), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, _this3), ' ' + person.profession + ' ', \"known for \", person.accomplishment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, _this3)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, _this3);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n}\n\n// Keys Info\n_c3 = KeepingListItemsInOrderWithKey;\nexport function KeysInfo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Where to get your key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"custom-ul\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Data from a database: If your data is coming from a database, you can use the database keys/IDs, which are unique by nature.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Locally generated data: If your data is generated and persisted locally (e.g. notes in a note-taking app), use an incrementing counter, crypto.randomUUID() or a package like uuid when creating items.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rules of keys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"custom-ul\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Keys must be unique among siblings. However, it\\u2019s okay to use the same keys for JSX nodes in different arrays.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Keys must not change or that defeats their purpose! Don\\u2019t generate them while rendering.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Why does React need keys?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"custom-ul\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Imagine that files on your desktop didn\\u2019t have names. Instead, you\\u2019d refer to them by their order \\u2014 the first file, the second file, and so on. You could get used to it, but once you delete a file, it would get confusing. The second file would become the first file, the third file would be the second file, and so on.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"File names in a folder and JSX keys in an array serve a similar purpose. They let us uniquely identify an item between its siblings. A well-chosen key provides more information than the position within the array. Even if the position changes due to reordering, the key lets React identify the item throughout its lifetime.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"custom-ul\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"How to move data out of components and into data structures like arrays and objects.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"How to generate sets of similar components with JavaScript\\u2019s map().\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"How to create arrays of filtered items with JavaScript\\u2019s filter().\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Why and how to set key on each component in a collection so React can keep track of each of them even if their position or data changes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n// Try out some challenges\n/*\nChallenge 1 of 4: Splitting a list in two \n- This example shows a list of all people.\n- Change it to show two separate lists one after another: Chemists and Everyone Else. Like previously, you can determine whether a person is a chemist by checking if person.profession === 'chemist'.\nChallenge 2 of 4: Nested lists in one component \n- Make a list of recipes from this array! For each recipe in the array, display its name as an <h2> and list its ingredients in a <ul>.\nChallenge 3 of 4: Extracting a list item component \n- This RecipeList component contains two nested map calls. To simplify it, extract a Recipe component from it which will accept id, name, and ingredients props. Where do you place the outer key and why?\nChallenge 4 of 4: List with a separator \n- This example renders a famous haiku by Katsushika Hokusai, with each line wrapped in a <p> tag. Your job is to insert an <hr /> separator between each paragraph. Your resulting structure should look like this:\n*/\n_c4 = KeysInfo;\nexport function RenderingListsChallenges1() {\n  var _this4 = this;\n  var chemists = people.filter(function (person) {\n    return person.profession === 'chemist';\n  });\n  var nonChemists = people.filter(function (person) {\n    return person.profession !== 'chemist';\n  });\n  var listChemists = chemists.map(function (person) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(person),\n        alt: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, _this4), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [person.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, _this4), ' ' + person.profession + ' ', \"known for \", person.accomplishment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, _this4)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, _this4);\n  });\n  var listEveryoneElse = nonChemists.map(function (person) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(person),\n        alt: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, _this4), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [person.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, _this4), ' ' + person.profession + ' ', \"known for \", person.accomplishment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, _this4)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, _this4);\n  });\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chemist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listChemists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Other Scientists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listEveryoneElse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_c5 = RenderingListsChallenges1;\nexport function RenderingListsChallenges2() {\n  var _this5 = this;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipes Challenge 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this), recipes.map(function (recipe) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, _this5), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recipe.ingredients.map(function (ingredient) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, ingredient, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, _this5);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, _this5)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, _this5);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_c6 = RenderingListsChallenges2;\nfunction RecipeChalleges3(_ref) {\n  var _this6 = this;\n  var recipe = _ref.recipe;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.ingredients.map(function (ingredient) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, ingredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, _this6);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, recipe.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_c7 = RecipeChalleges3;\nexport function RenderingListsChallenges3() {\n  var _this7 = this;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipes Challenge 3 : Simplify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), recipes.map(function (recipe) {\n      return /*#__PURE__*/_jsxDEV(RecipeChalleges3, {\n        recipe: recipe\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }, _this7);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_c8 = RenderingListsChallenges3;\nvar poem = {\n  lines: ['I write, erase, rewrite', 'Erase again, and then', 'A poppy blooms.']\n};\nexport function Poem() {\n  var _this8 = this;\n  var output = [];\n\n  // Fill the output array\n  poem.lines.forEach(function (line, i) {\n    output.push( /*#__PURE__*/_jsxDEV(\"hr\", {}, i + '-separator', false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, _this8));\n    output.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, i + '-text', false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, _this8));\n  });\n  // Remove the first <hr />\n  output.shift();\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: output\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_c9 = Poem;\nexport function PoemWithFragment() {\n  var _this9 = this;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: poem.lines.map(function (line, i) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [i > 0 && /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, _this9), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, _this9)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, _this9);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_c10 = PoemWithFragment;\nexport function RenderingListsChallenges() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-container\",\n    children: [/*#__PURE__*/_jsxDEV(RenderingListsChallenges1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RenderingListsChallenges2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RenderingListsChallenges3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Poem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PoemWithFragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Default For Rendering List Demo\n_c11 = RenderingListsChallenges;\nexport default function RenderingListsDemo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2TopicTitle\",\n      children: \"Rendering data from arrays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderingDataFromArrays, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2TopicTitle\",\n      children: \"Filtering arrays of items \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilteringArraysOfItems, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2TopicTitle\",\n      children: \"Keeping list items in order with key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeepingListItemsInOrderWithKey, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2TopicTitle\",\n      children: \"Keys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeysInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2TopicTitle\",\n      children: \"Try out some challenges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderingListsChallenges, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_c12 = RenderingListsDemo;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"RenderingDataFromArrays\");\n$RefreshReg$(_c2, \"FilteringArraysOfItems\");\n$RefreshReg$(_c3, \"KeepingListItemsInOrderWithKey\");\n$RefreshReg$(_c4, \"KeysInfo\");\n$RefreshReg$(_c5, \"RenderingListsChallenges1\");\n$RefreshReg$(_c6, \"RenderingListsChallenges2\");\n$RefreshReg$(_c7, \"RecipeChalleges3\");\n$RefreshReg$(_c8, \"RenderingListsChallenges3\");\n$RefreshReg$(_c9, \"Poem\");\n$RefreshReg$(_c10, \"PoemWithFragment\");\n$RefreshReg$(_c11, \"RenderingListsChallenges\");\n$RefreshReg$(_c12, \"RenderingListsDemo\");","map":{"version":3,"names":["people","getImageUrl","recipes","Fragment","jsxDEV","_jsxDEV","peopleNotSafeGotErrorWarningAboutKey","RenderingDataFromArrays","_this","listItemsNotSafe","map","person","children","crypto","randomUUID","fileName","_jsxFileName","lineNumber","columnNumber","_c","FilteringArraysOfItems","_this2","chemists","filter","profession","listItems","src","alt","name","accomplishment","_c2","KeepingListItemsInOrderWithKey","_this3","id","_c3","KeysInfo","className","_c4","RenderingListsChallenges1","_this4","nonChemists","listChemists","listEveryoneElse","_c5","RenderingListsChallenges2","_this5","recipe","ingredients","ingredient","_c6","RecipeChalleges3","_ref","_this6","_c7","RenderingListsChallenges3","_this7","_c8","poem","lines","Poem","_this8","output","forEach","line","i","push","shift","_c9","PoemWithFragment","_this9","_c10","RenderingListsChallenges","_c11","RenderingListsDemo","_c12","$RefreshReg$"],"sources":["/Users/leemccormick/Desktop/Playground/Intro-To-React/react_dev_learn/01_describing_the_ui/src/RederingLists.js"],"sourcesContent":["/* NOTE : Rendering List Demo\n- How to move data out of components and into data structures like arrays and objects.\n- How to generate sets of similar components with JavaScript’s map().\n- How to create arrays of filtered items with JavaScript’s filter().\n- Why and how to set key on each component in a collection so React can keep track of each of them even if their position or data changes.\n*/\nimport { people } from './data.js';\nimport { getImageUrl } from './utils.js';\nimport { recipes } from './data.js';\nimport { Fragment } from 'react';\n\n// Rendering data from arrays\nconst peopleNotSafeGotErrorWarningAboutKey = [\n  'Creola Katherine Johnson: mathematician',\n  'Mario José Molina-Pasquel Henríquez: chemist',\n  'Mohammad Abdus Salam: physicist',\n  'Percy Lavon Julian: chemist',\n  'Subrahmanyan Chandrasekhar: astrophysicist'\n];\n\nexport function RenderingDataFromArrays() {\n  const listItemsNotSafe = peopleNotSafeGotErrorWarningAboutKey.map(person => <li key={crypto.randomUUID()}>{person}</li>);\n\n  return (\n    <div>\n        <h1>Data before putting in array</h1>\n        <ul>\n        <li>Creola Katherine Johnson: mathematician</li>\n        <li>Mario José Molina-Pasquel Henríquez: chemist</li>\n        <li>Mohammad Abdus Salam: physicist</li>\n        <li>Percy Lavon Julian: chemist</li>\n        <li>Subrahmanyan Chandrasekhar: astrophysicist</li>\n        </ul>\n    \n        <h1>Data from listItems that not safe</h1>\n        <ul>{listItemsNotSafe}</ul>\n    </div>\n  );\n}\n\n// Filtering arrays of items\n// import { people } from './data.js';\n// import { getImageUrl } from './utils.js';\n/*\n1) Create a new array of just “chemist” people, chemists, by calling filter() on the people filtering by person.profession === 'chemist':\n2) Now map over chemists: listItems\n3) Lastly, return the listItems from your component:\n*/\n\nexport function FilteringArraysOfItems() {\n  const chemists = people.filter(person =>\n    person.profession === 'chemist'\n  );\n  const listItems = chemists.map(person => \n    <li key={person.name}>\n      <img\n        src={getImageUrl(person)}\n        alt={person.name}\n      />\n      <p>\n        <b>{person.name}:</b>\n        {' ' + person.profession + ' '}\n        known for {person.accomplishment}\n      </p>\n    </li>\n  );\n  return <ul>{listItems}</ul>;\n}\n\n// Keeping list items in order with key\nexport function KeepingListItemsInOrderWithKey() {\n  const listItems = people.map(person =>\n    <li key={person.id}>\n      <img\n        src={getImageUrl(person)}\n        alt={person.name}\n      />\n      <p>\n        <b>{person.name}</b>\n          {' ' + person.profession + ' '}\n          known for {person.accomplishment}\n      </p>\n    </li>\n  );\n  return <ul>{listItems}</ul>;\n}\n\n// Keys Info\nexport function KeysInfo() {\n  return (\n    <div>\n        <h1>Where to get your key</h1>\n        <ul className=\"custom-ul\"> \n        <li>Data from a database: If your data is coming from a database, you can use the database keys/IDs, which are unique by nature.</li>\n        <li>Locally generated data: If your data is generated and persisted locally (e.g. notes in a note-taking app), use an incrementing counter, crypto.randomUUID() or a package like uuid when creating items.</li>\n        </ul>\n\n        <h1>Rules of keys</h1>\n        <ul className=\"custom-ul\"> \n        <li>Keys must be unique among siblings. However, it’s okay to use the same keys for JSX nodes in different arrays.</li>\n        <li>Keys must not change or that defeats their purpose! Don’t generate them while rendering.</li>\n        </ul>\n\n        <h1>Why does React need keys?</h1>\n        <ul className=\"custom-ul\"> \n        <li>Imagine that files on your desktop didn’t have names. Instead, you’d refer to them by their order — the first file, the second file, and so on. You could get used to it, but once you delete a file, it would get confusing. The second file would become the first file, the third file would be the second file, and so on.</li>\n        <li>File names in a folder and JSX keys in an array serve a similar purpose. They let us uniquely identify an item between its siblings. A well-chosen key provides more information than the position within the array. Even if the position changes due to reordering, the key lets React identify the item throughout its lifetime.</li>\n        </ul>\n\n        <h1>Recap</h1>\n        <ul className=\"custom-ul\"> \n        <li>How to move data out of components and into data structures like arrays and objects.</li>\n        <li>How to generate sets of similar components with JavaScript’s map().</li>\n        <li>How to create arrays of filtered items with JavaScript’s filter().</li>\n        <li>Why and how to set key on each component in a collection so React can keep track of each of them even if their position or data changes.</li>\n        </ul>\n    </div>\n  );\n}\n\n// Try out some challenges\n/*\nChallenge 1 of 4: Splitting a list in two \n- This example shows a list of all people.\n- Change it to show two separate lists one after another: Chemists and Everyone Else. Like previously, you can determine whether a person is a chemist by checking if person.profession === 'chemist'.\nChallenge 2 of 4: Nested lists in one component \n- Make a list of recipes from this array! For each recipe in the array, display its name as an <h2> and list its ingredients in a <ul>.\nChallenge 3 of 4: Extracting a list item component \n- This RecipeList component contains two nested map calls. To simplify it, extract a Recipe component from it which will accept id, name, and ingredients props. Where do you place the outer key and why?\nChallenge 4 of 4: List with a separator \n- This example renders a famous haiku by Katsushika Hokusai, with each line wrapped in a <p> tag. Your job is to insert an <hr /> separator between each paragraph. Your resulting structure should look like this:\n*/\n\nexport function RenderingListsChallenges1() {\n  const chemists = people.filter(person =>\n    person.profession === 'chemist'\n  );\n\n  const nonChemists = people.filter(person =>\n    person.profession !== 'chemist'\n  );\n\n  const listChemists = chemists.map(person =>\n    <li key={person.id}>\n      <img\n        src={getImageUrl(person)}\n        alt={person.name}\n      />\n      <p>\n        <b>{person.name}:</b>\n        {' ' + person.profession + ' '}\n        known for {person.accomplishment}\n      </p>\n    </li>\n  );\n\n  const listEveryoneElse= nonChemists.map(person =>\n    <li key={person.id}>\n      <img\n        src={getImageUrl(person)}\n        alt={person.name}\n      />\n      <p>\n        <b>{person.name}:</b>\n        {' ' + person.profession + ' '}\n        known for {person.accomplishment}\n      </p>\n    </li>\n  );\n \n  return (\n    <article>\n      <h1>Chemist</h1>\n      <ul>{listChemists}</ul>\n\n      <h1>Other Scientists</h1>\n      <ul>{listEveryoneElse}</ul>\n    </article>\n  );\n}\n\nexport function RenderingListsChallenges2() { \n  return (\n    <div>\n    <h1>Recipes Challenge 2</h1>\n    {recipes.map(recipe =>\n      <div key={recipe.id}>\n        <h2>{recipe.name}</h2>\n        <ul>\n          {recipe.ingredients.map(ingredient =>\n            <li key={ingredient}>\n              {ingredient}\n            </li>\n          )}\n        </ul>\n      </div>\n    )}\n    </div>\n  );\n}\n\nfunction RecipeChalleges3({recipe}) {\n  return (\n    <div key={recipe.id}>\n        <h2>{recipe.name}</h2>\n        <ul>\n          {recipe.ingredients.map(ingredient =>\n            <li key={ingredient}>\n              {ingredient}\n            </li>\n          )}\n        </ul>\n      </div>\n  );\n}\n\nexport function RenderingListsChallenges3() { \n  return (\n    <div>\n    <h1>Recipes Challenge 3 : Simplify</h1>\n    {recipes.map(recipe =>\n      <RecipeChalleges3 recipe={recipe} key={recipe.id}/>\n    )}\n    </div>\n  );\n}\n\nconst poem = {\n  lines: [\n    'I write, erase, rewrite',\n    'Erase again, and then',\n    'A poppy blooms.'\n  ]\n};\n\nexport function Poem() {\n  let output = [];\n\n  // Fill the output array\n  poem.lines.forEach((line, i) => {\n    output.push(\n      <hr key={i + '-separator'} />\n    );\n    output.push(\n      <p key={i + '-text'}>\n        {line}\n      </p>\n    );\n  });\n  // Remove the first <hr />\n  output.shift();\n\n  return (\n    <article>\n      {output}\n    </article>\n  );\n}\n\nexport function PoemWithFragment() {\n  return (\n    <article>\n      {poem.lines.map((line, i) =>\n        <Fragment key={i}>\n          {i > 0 && <hr />}\n          <p>{line}</p>\n        </Fragment>\n      )}\n    </article>\n  );\n}\n\n\nexport function RenderingListsChallenges() {\n  return (\n    <div className=\"my-container\">\n    <RenderingListsChallenges1 />\n    <RenderingListsChallenges2 />\n    <RenderingListsChallenges3 />\n    <Poem />\n    <PoemWithFragment />\n    </div>\n  );\n}\n\n// Main Default For Rendering List Demo\nexport default function RenderingListsDemo() {\n  return (\n    <div className=\"my-container\">\n      <h2 className=\"h2TopicTitle\">Rendering data from arrays</h2>\n      <RenderingDataFromArrays />\n\n      <h2 className=\"h2TopicTitle\">Filtering arrays of items </h2>\n      <FilteringArraysOfItems />\n\n      <h2 className=\"h2TopicTitle\">Keeping list items in order with key</h2>\n      <KeepingListItemsInOrderWithKey />\n\n      <h2 className=\"h2TopicTitle\">Keys</h2>\n      <KeysInfo />\n\n      <h2 className=\"h2TopicTitle\">Try out some challenges</h2>\n      <RenderingListsChallenges />\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}